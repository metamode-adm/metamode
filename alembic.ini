# ============================
# Alembic Configuration
# ============================

[alembic]
# Caminho para os scripts de migração
script_location = migrations

# Adiciona o diretório raiz ao sys.path
prepend_sys_path = .

# Usa separador do sistema operacional para múltiplos diretórios
version_path_separator = os

#  NÃO DEFINA sqlalchemy.url AQUI
# O caminho do banco de dados é obtido diretamente do settings.py
# (via src/backend/core/config.py - settings.DATABASE_URL)

# ============================
# Post Write Hooks (opcional)
# ============================

[post_write_hooks]
# Exemplo para rodar black automaticamente em cada migração criada:
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 88 REVISION_SCRIPT_FILENAME

# Exemplo para lint automático com ruff:
# hooks = ruff
# ruff.type = exec
# ruff.executable = %(here)s/.venv/bin/ruff
# ruff.options = check --fix REVISION_SCRIPT_FILENAME

# ============================
# LOGGING
# ============================

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
